import logging
from datetime import datetime, timedelta
from typing import Optional
import os

from aiogram import Router, F, Bot
from aiogram.types import Message

from tgbot.apscheduler.apscheduler import scheduler
from tgbot.apscheduler.send_to_admin_group import notification_trial_taken
from tgbot.config import config
from tgbot.mongo_db.db_api import subs
from tgbot.utils.get_trial_image import get_text_from_file  # –ù–æ–≤—ã–π –∏–º–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–∏
from tgbot.keyboards.reply import choose_plan_keyboard
from tgbot.keyboards.inline import (
    support_keyboard,
    settings_keyboard,
)
from tgbot.yoomoneylogic.trial_subscription_logic import process_trial_subscription

trial_subscription_router = Router()


@trial_subscription_router.message(
    F.text.in_({"üî• –ê–ö–¶–ò–Ø!!! üî• ‚è± –ü—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥ –Ω–∞ 3 –¥–Ω—è"})
)
async def process_pay(query: Message, bot: Bot):
    user_id: int = query.from_user.id
    user = query.from_user.full_name
    username = query.from_user.username

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫—Ç–∏–≤–Ω–∞—è –∏–ª–∏ –∑–∞–≤–µ—Ä—à—ë–Ω–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞
    sub: Optional[dict] = await subs.find_one(filter={"user_id": user_id})

    if sub:
        sub_flag = sub.get("client_id")
        if len(sub_flag) > 10:
            await query.answer(
                text="–ò–∑–≤–∏–Ω–∏—Ç–µ! –í—ã —É–∂–µ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏—Å—å –ø—Ä–æ–±–Ω—ã–º –ø–µ—Ä–∏–æ–¥–æ–º üò™"
                "–ê–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑",
                reply_markup=choose_plan_keyboard,
            )
        else:
            await query.answer(
                text="‚úÖ –í—ã —É–∂–µ –æ—Ñ–æ—Ä–º–ª—è–ª–∏ –ø–æ–¥–ø–∏—Å–∫—É\n"
                "–ê–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –Ω–æ–≤—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º",
                reply_markup=choose_plan_keyboard,
            )
    else:
        text_content = ""
        client_id = ""
        pk = ""

        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç –∏–∑ —Ñ–∞–π–ª–∞
        async for text in get_text_from_file(config.tg_bot.trial_image_folder):
            text_content = text
            break

        try:
            pk = "123"  # ID –ø–∞–∫–µ—Ç–∞, –º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ –±–æ–ª–µ–µ —Å–ª–æ–∂–Ω—É—é –ª–æ–≥–∏–∫—É
            client_id = "Client_‚Ññ" + pk + "_TRIAL"
        except Exception as e:
            logging.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏: {e}")

        # –ï—Å–ª–∏ —Ç–µ–∫—Å—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω, —É–≤–µ–¥–æ–º–ª—è–µ–º –æ–± —ç—Ç–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if not text_content:
            await query.answer(
                text="–ò–∑–≤–∏–Ω–∏—Ç–µ! –õ–∏–º–∏—Ç –Ω–∞ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –ø–æ–¥–ø–∏—Å–∫–∏ –∑–∞–∫–æ–Ω—á–∏–ª—Å—è üò™\n"
                "–ñ–¥–∏—Ç–µ –∞–Ω–æ–Ω—Å–∞ –Ω–æ–≤–æ–π –∞–∫—Ü–∏–∏ –≤ –Ω–∞—à–∏—Ö —Å–æ—Ü —Å–µ—Ç—è—Ö üôà",
                reply_markup=support_keyboard,
            )
        else:
            # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥ —Å —Ç–µ–∫—Å—Ç–æ–º –∏–∑ —Ñ–∞–π–ª–∞
            await process_trial_subscription(
                query, settings_keyboard, client_id, text_content, pk
            )
            logging.info(
                f"{username} ID:{user_id} —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–∏–ª –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –ø—Ä–æ–±–Ω–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞"
            )

            # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–¥–∞–Ω–∏–µ –≤ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
            scheduler.add_job(
                notification_trial_taken,
                trigger="date",
                run_date=datetime.now() + timedelta(seconds=10),
                kwargs={
                    "bot": bot,
                    "chat_id": config.tg_bot.channel_id,
                    "user": user,
                    "username": username,
                    "client_id": client_id,
                },
            )
